---
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { cn } from '@/utils'

const {
	as: Tag = 'a',
	class: className,
	href,
	heading,
	subheading,
	imagePath,
	altText,
	tags
} = Astro.props

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}')

// Handle both content collection images and default images
const imageSource = typeof imagePath === 'string' ? images[imagePath]?.() : imagePath

if (!imageSource) {
	throw new Error(`Invalid image source - ${imagePath} is not a valid image path or object`)
}
---

<Tag
	class={cn(
		className,
		'group flex h-full flex-col rounded-2xl border border-border bg-primary-foreground',
		href && 'transition-all hover:border-foreground/25 hover:shadow-sm'
	)}
	href={href}
>
	<div class='relative h-[250px] w-full'>
		<Image
			src={imageSource}
			alt={altText}
			class='h-full w-full rounded-2xl rounded-bl-none rounded-br-none object-cover'
			loading='eager'
		/>
	</div>
	<div class='flex flex-1 flex-col gap-y-2 px-5 py-4'>
		<h1 class='line-clamp-1 text-lg font-medium'>{heading}</h1>
		<h2 class='line-clamp-3 text-muted-foreground'>{subheading}</h2>
		<div class='mt-auto flex flex-wrap gap-2'>
			{
				tags.map((tag: string) => (
					<span class='rounded-full bg-border px-3 text-sm text-muted-foreground'>{tag}</span>
				))
			}
		</div>
	</div>

	<slot />
</Tag>
